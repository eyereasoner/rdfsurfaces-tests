# ----------------
# Peano arithmetic
# ----------------
#
# See https://en.wikipedia.org/wiki/Peano_axioms

@prefix log: <http://www.w3.org/2000/10/swap/log#>.
@prefix : <urn:example:>.

# add
(_:A _:U) log:onNegativeSurface {
    () log:onNegativeSurface {
        (_:A 0) :add (_:A _:U).
    }.
}.

(_:A _:B _:C _:U _:V) log:onNegativeSurface {
    () log:onNegativeSurface {
        (_:A (| :s _:B |)) :add ((| :s _:C |) _:U).
    }.
    (_:A _:B) :add (_:C _:V).
}.

# multiply
(_:A _:U) log:onNegativeSurface {
    () log:onNegativeSurface {
        (_:A 0) :multiply (0 _:U).
    }.
}.

(_:A _:B _:C _:D _:U _:V _:W) log:onNegativeSurface {
    () log:onNegativeSurface {
        (_:A (| :s _:B |)) :multiply (_:C _:U).
    }.
    (_:A _:B) :multiply (_:D _:V).
    (_:A _:D) :add (_:C _:W).
}.

# factorial
(_:A _:B _:U _:V) log:onNegativeSurface {
    () log:onNegativeSurface {
        _:A :factorial (_:B _:U).
    }.
    (_:A (| :s 0 |)) :fac (_:B _:V).
}.

(_:A _:U) log:onNegativeSurface {
    () log:onNegativeSurface {
        (0 _:A) :fac (_:A _:U).
    }.
}.

(_:A _:B _:C _:D _:U _:V _:W) log:onNegativeSurface {
    () log:onNegativeSurface {
        ((| :s _:A |) _:B) :fac (_:C _:U).
    }.
    (_:B (| :s _:A |)) :multiply (_:D _:V).
    (_:A _:D) :fac (_:C _:W).
}.

# question
(_:A _:B _:C) log:onNegativeSurface {
    ((| :s 0 |) (| :s (| :s 0 |) |)) :add (_:A :exact).
    (_:A (| :s (| :s 0 |) |)) :multiply (_:B :exact).
    _:B :factorial (_:C :exact).
    _:C log:equalTo (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s (| :s 0 |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |) |).
    () log:onNegativeAnswerSurface {
        :test :is true.
    }.
}.
